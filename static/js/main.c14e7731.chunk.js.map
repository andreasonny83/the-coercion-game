{"version":3,"sources":["types/level.ts","types/answers.ts","components/Question.tsx","actions/level.ts","connected/QuestionWrapper.tsx","actions/answers.ts","connected/Question.tsx","components/Homepage.tsx","connected/Homepage.tsx","components/Notfound.tsx","Router.tsx","reducers/level.ts","reducers/answers.ts","reducers/index.ts","store/index.ts","index.tsx"],"names":["LevelActionTypes","AnswersActionTypes","Question","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","nextLevel","props","select","inherits","createClass","key","value","_this$props","description","options","answers","currentLevel","selectAnswer","react_default","a","createElement","className","onClick","map","option","id","classNames","optionId","body","disabled","Component","answerSelected","type","NEXT_LEVEL","payload","QuestionWrapper","connect","state","level","dispatch","levelId","questionSelected","SELECT_ANSWER","answer","QuestionComponent","_ref","react_apollo_browser_umd","query","gql","_templateObject","variables","res","loading","error","data","question","Homepage","Fragment","connected_Question_Question","HomepageComponent","Notfound","Router","Switch","Route","exact","path","component","initialState","rootReducer","combineReducers","undefined","objectSpread","action","defineProperty","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","client","ApolloClient","uri","ReactDOM","render","BrowserRouter","basename","process","es","Router_Router","document","getElementById"],"mappings":"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","file":"static/js/main.c14e7731.chunk.js","sourcesContent":["import { Action } from 'redux';\n\nexport enum LevelActionTypes {\n  NEXT_LEVEL = '@@level/NEXT_LEVEL',\n  PREVIOUS_LEVEL = '@@level/PREVIOUS_LEVEL',\n}\n\nexport interface NextLevelAction extends Action {\n  type: LevelActionTypes.NEXT_LEVEL;\n}\n\nexport interface PreviousLevelAction extends Action {\n  type: LevelActionTypes.PREVIOUS_LEVEL;\n  payload: number;\n}\n\nexport type LevelAction = NextLevelAction | PreviousLevelAction;\n","import { Action } from 'redux';\n\nexport enum AnswersActionTypes {\n  SELECT_ANSWER = '@@level/SELECT_ANSWER',\n}\n\nexport interface SelectAnswerAction extends Action {\n  type: AnswersActionTypes.SELECT_ANSWER;\n  payload: {\n    level: number;\n    answer: number;\n  };\n}\n\nexport type AnswersAction = SelectAnswerAction;\n","// Copyright (c) 2018 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { Option } from '../connected/Question';\nimport { Answer } from '../reducers/answers';\n\nimport './Question.css';\n\ninterface QuestionProps {\n  description: string;\n  options: Option[];\n  currentLevel: number;\n  level?: number;\n  answers: Answer;\n  questionSelected?: number;\n  nextLevel: (levelId: number) => void;\n  selectAnswer: (levelId: number, questionSelected: number) => any;\n}\n\nexport class Question extends Component<QuestionProps> {\n  public render() {\n    const { description, options, answers, currentLevel, selectAnswer } = this.props;\n    const isActive = (optionId: number) => answers[currentLevel] === optionId;\n\n    return (\n      <div className=\"Question\" onClick={this.select}>\n        <p>{description}</p>\n        <div className=\"questions\">\n          {options.map((option: Option) => (\n            <div\n              key={option.id}\n              className={classNames('question', isActive(option.id) && 'active')}\n              onClick={() => selectAnswer(currentLevel, option.id)}\n            >\n              {option.body}\n            </div>\n          ))}\n\n          <button disabled={!answers[currentLevel]} onClick={this.nextLevel}>\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  public nextLevel = () => {\n    this.props.nextLevel(10);\n  };\n\n  public select = () => {\n    // Allo!\n  };\n}\n","import { ActionCreator } from 'redux';\nimport { LevelActionTypes, NextLevelAction } from '../types';\n\nexport const nextLevel: ActionCreator<NextLevelAction>  = (answerSelected: number) => ({\n  type: LevelActionTypes.NEXT_LEVEL,\n  payload: answerSelected,\n});\n","// Copyright (c) 2018 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\nimport { connect } from 'react-redux';\nimport { Question as QuestionComponent } from '../components/Question';\nimport { nextLevel, selectAnswer } from '../actions';\nimport { AppState } from '../reducers';\n\nconst mapStateToProps = (state: AppState) => ({\n  currentLevel: state.level.currentLevel,\n  answers: state.answers,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  nextLevel: (levelId: number) => dispatch(nextLevel(levelId)),\n  selectAnswer: (levelId: number, questionSelected: number) => dispatch(selectAnswer(levelId, questionSelected)),\n});\n\nexport const QuestionWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionComponent);\n","import { ActionCreator } from 'redux';\nimport { AnswersAction, AnswersActionTypes } from '../types';\n\nexport const selectAnswer: ActionCreator<AnswersAction> = (levelId: number, answerSelected: number) => ({\n  type: AnswersActionTypes.SELECT_ANSWER,\n  payload: {\n    level: levelId,\n    answer: answerSelected,\n  },\n});\n","// Copyright (c) 2018 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { QuestionWrapper } from './QuestionWrapper';\n\ninterface QuestionProps {\n  id: number;\n}\n\nexport interface Option {\n  id: number;\n  body: string;\n}\n\ninterface Data {\n  question: string;\n  level: number;\n  options: Option[];\n  description: string;\n  answer: number;\n}\n\ninterface QueryResult {\n  loading: boolean;\n  error: any;\n  data: {\n    question: Data;\n  };\n}\n\nexport const Question = ({ id }: QuestionProps) => {\n  return (\n    <Query\n      query={gql`\n        query Question($id: Int!) {\n          question(id: $id) {\n            title\n            level\n            description\n            options {\n              id\n              body\n            }\n            answer\n          }\n        }\n      `}\n      variables={{ id }}\n    >\n      {(res: Partial<QueryResult>) => {\n        if (res.loading) {\n          return <p>Loading...</p>;\n        }\n        if (res.error) {\n          return <p>Error :(</p>;\n        }\n\n        return (\n          <QuestionWrapper\n            description={res.data!.question.description}\n            level={res.data!.question.level}\n            options={res.data!.question.options}\n          />\n        );\n      }}\n    </Query>\n  );\n};\n","// Copyright (c) 2018 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\nimport React, { Component } from 'react';\nimport { Question } from '../connected/Question';\n\nimport './Homepage.css';\n\ninterface HomepageProps {\n  level: number;\n  nextLevel(): () => void;\n}\n\nexport class Homepage extends Component<HomepageProps> {\n  public render() {\n    const { level, nextLevel } = this.props;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Welcome to the Coercion Game!</h1>\n        </header>\n        <main>\n          {!level ? (\n            <button onClick={nextLevel}>Start</button>\n          ) : (\n            <React.Fragment>\n              <div>Level: {level}</div>\n              <Question id={level} />\n            </React.Fragment>\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n","// Copyright (c) 2018 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\nimport { connect } from 'react-redux';\nimport { Homepage as HomepageComponent } from '../components/Homepage';\nimport { nextLevel } from '../actions';\nimport { AppState } from '../reducers';\n\nconst mapStateToProps = (state: AppState) => ({\n  level: state.level.currentLevel,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  nextLevel: () => dispatch(nextLevel()),\n});\n\nexport const Homepage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomepageComponent);\n","// Copyright (c) 2018 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\nimport React, { Component } from 'react';\n\nexport class Notfound extends Component {\n  public render() {\n    return <div>Page Not Found.</div>;\n  }\n}\n","// Copyright (c) 2018 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Homepage } from './connected/Homepage';\nimport { Notfound } from './components/Notfound';\n\nexport class Router extends Component {\n  public render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route component={Notfound} />\n      </Switch>\n    );\n  }\n}\n","import { Reducer } from 'redux';\nimport { LevelAction, LevelActionTypes } from '../types';\n\nexport interface LevelState {\n  currentLevel: number;\n}\n\nconst initialState: LevelState = {\n  currentLevel: 0,\n};\n\nexport const levelReducer: Reducer<LevelState> = (state: LevelState = initialState, action) => {\n  switch ((action as LevelAction).type) {\n    case LevelActionTypes.NEXT_LEVEL:\n      return {\n        ...state,\n        currentLevel: (state.currentLevel += 1),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\nimport { AnswersAction, AnswersActionTypes } from '../types';\n\nexport interface Answer {\n  [key: number]: number;\n}\n\nexport type AnswersState = Answer;\n\nconst initialState = {};\n\nexport const answersReducer: Reducer<AnswersState> = (state: AnswersState = initialState, action) => {\n  switch ((action as AnswersAction).type) {\n    case AnswersActionTypes.SELECT_ANSWER:\n      return {\n        ...state,\n        [action.payload.level]: action.payload.answer,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers, Reducer } from 'redux';\nimport { levelReducer, LevelState } from './level';\nimport { AnswersState, answersReducer } from './answers';\n\nexport interface AppState {\n  level: LevelState;\n  answers: AnswersState;\n}\n\nexport const rootReducer: Reducer<AppState> = combineReducers({\n  level: levelReducer,\n  answers: answersReducer,\n});\n","import { AnyAction, applyMiddleware, createStore, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { AppState, rootReducer } from '../reducers/index';\n\nconst composeEnhancers = composeWithDevTools({});\n\nexport const store: Store<AppState> = createStore<AppState, AnyAction, {}, {}>(\n  rootReducer,\n  composeEnhancers(applyMiddleware())\n);\n","// Copyright (c) 2018 AndreaSonny <andreasonny83@gmail.com> (https://github.com/andreasonny83)\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Provider } from 'react-redux';\nimport { Router } from './Router';\nimport { store } from './store/index';\n\nimport './index.css';\n\nconst client = new ApolloClient({\n  uri:\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:5000/graphql'\n      : 'https://l94v8vh7rc.execute-api.us-east-1.amazonaws.com/dev/graphql',\n});\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <Router />\n      </Provider>\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}